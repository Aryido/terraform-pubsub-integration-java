/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.googlecodesamples.cloud.jss.common.utilities;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class EvChargeMetricComplete extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5884765634178677159L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EvChargeMetricComplete\",\"namespace\":\"com.googlecodesamples.cloud.jss.common.utilities\",\"fields\":[{\"name\":\"session_id\",\"type\":\"string\"},{\"name\":\"station_id\",\"type\":\"int\"},{\"name\":\"location\",\"type\":\"string\"},{\"name\":\"event_timestamp\",\"type\":\"string\"},{\"name\":\"publish_timestamp\",\"type\":\"string\"},{\"name\":\"processing_time_sec\",\"type\":\"float\"},{\"name\":\"ack_timestamp\",\"type\":\"string\"},{\"name\":\"session_duration_hr\",\"type\":\"float\"},{\"name\":\"avg_charge_rate_kw\",\"type\":\"float\"},{\"name\":\"battery_capacity_kwh\",\"type\":\"float\"},{\"name\":\"battery_level_start\",\"type\":\"float\"},{\"name\":\"battery_level_end\",\"type\":[\"null\",\"float\"]},{\"name\":\"charged_total_kwh\",\"type\":[\"null\",\"float\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<EvChargeMetricComplete> ENCODER =
      new BinaryMessageEncoder<EvChargeMetricComplete>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<EvChargeMetricComplete> DECODER =
      new BinaryMessageDecoder<EvChargeMetricComplete>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<EvChargeMetricComplete> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<EvChargeMetricComplete> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<EvChargeMetricComplete> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<EvChargeMetricComplete>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this EvChargeMetricComplete to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a EvChargeMetricComplete from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a EvChargeMetricComplete instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static EvChargeMetricComplete fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence session_id;
  private int station_id;
  private java.lang.CharSequence location;
  private java.lang.CharSequence event_timestamp;
  private java.lang.CharSequence publish_timestamp;
  private float processing_time_sec;
  private java.lang.CharSequence ack_timestamp;
  private float session_duration_hr;
  private float avg_charge_rate_kw;
  private float battery_capacity_kwh;
  private float battery_level_start;
  private java.lang.Float battery_level_end;
  private java.lang.Float charged_total_kwh;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public EvChargeMetricComplete() {}

  /**
   * All-args constructor.
   * @param session_id The new value for session_id
   * @param station_id The new value for station_id
   * @param location The new value for location
   * @param event_timestamp The new value for event_timestamp
   * @param publish_timestamp The new value for publish_timestamp
   * @param processing_time_sec The new value for processing_time_sec
   * @param ack_timestamp The new value for ack_timestamp
   * @param session_duration_hr The new value for session_duration_hr
   * @param avg_charge_rate_kw The new value for avg_charge_rate_kw
   * @param battery_capacity_kwh The new value for battery_capacity_kwh
   * @param battery_level_start The new value for battery_level_start
   * @param battery_level_end The new value for battery_level_end
   * @param charged_total_kwh The new value for charged_total_kwh
   */
  public EvChargeMetricComplete(java.lang.CharSequence session_id, java.lang.Integer station_id, java.lang.CharSequence location, java.lang.CharSequence event_timestamp, java.lang.CharSequence publish_timestamp, java.lang.Float processing_time_sec, java.lang.CharSequence ack_timestamp, java.lang.Float session_duration_hr, java.lang.Float avg_charge_rate_kw, java.lang.Float battery_capacity_kwh, java.lang.Float battery_level_start, java.lang.Float battery_level_end, java.lang.Float charged_total_kwh) {
    this.session_id = session_id;
    this.station_id = station_id;
    this.location = location;
    this.event_timestamp = event_timestamp;
    this.publish_timestamp = publish_timestamp;
    this.processing_time_sec = processing_time_sec;
    this.ack_timestamp = ack_timestamp;
    this.session_duration_hr = session_duration_hr;
    this.avg_charge_rate_kw = avg_charge_rate_kw;
    this.battery_capacity_kwh = battery_capacity_kwh;
    this.battery_level_start = battery_level_start;
    this.battery_level_end = battery_level_end;
    this.charged_total_kwh = charged_total_kwh;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return session_id;
    case 1: return station_id;
    case 2: return location;
    case 3: return event_timestamp;
    case 4: return publish_timestamp;
    case 5: return processing_time_sec;
    case 6: return ack_timestamp;
    case 7: return session_duration_hr;
    case 8: return avg_charge_rate_kw;
    case 9: return battery_capacity_kwh;
    case 10: return battery_level_start;
    case 11: return battery_level_end;
    case 12: return charged_total_kwh;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: session_id = (java.lang.CharSequence)value$; break;
    case 1: station_id = (java.lang.Integer)value$; break;
    case 2: location = (java.lang.CharSequence)value$; break;
    case 3: event_timestamp = (java.lang.CharSequence)value$; break;
    case 4: publish_timestamp = (java.lang.CharSequence)value$; break;
    case 5: processing_time_sec = (java.lang.Float)value$; break;
    case 6: ack_timestamp = (java.lang.CharSequence)value$; break;
    case 7: session_duration_hr = (java.lang.Float)value$; break;
    case 8: avg_charge_rate_kw = (java.lang.Float)value$; break;
    case 9: battery_capacity_kwh = (java.lang.Float)value$; break;
    case 10: battery_level_start = (java.lang.Float)value$; break;
    case 11: battery_level_end = (java.lang.Float)value$; break;
    case 12: charged_total_kwh = (java.lang.Float)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'session_id' field.
   * @return The value of the 'session_id' field.
   */
  public java.lang.CharSequence getSessionId() {
    return session_id;
  }


  /**
   * Sets the value of the 'session_id' field.
   * @param value the value to set.
   */
  public void setSessionId(java.lang.CharSequence value) {
    this.session_id = value;
  }

  /**
   * Gets the value of the 'station_id' field.
   * @return The value of the 'station_id' field.
   */
  public int getStationId() {
    return station_id;
  }


  /**
   * Sets the value of the 'station_id' field.
   * @param value the value to set.
   */
  public void setStationId(int value) {
    this.station_id = value;
  }

  /**
   * Gets the value of the 'location' field.
   * @return The value of the 'location' field.
   */
  public java.lang.CharSequence getLocation() {
    return location;
  }


  /**
   * Sets the value of the 'location' field.
   * @param value the value to set.
   */
  public void setLocation(java.lang.CharSequence value) {
    this.location = value;
  }

  /**
   * Gets the value of the 'event_timestamp' field.
   * @return The value of the 'event_timestamp' field.
   */
  public java.lang.CharSequence getEventTimestamp() {
    return event_timestamp;
  }


  /**
   * Sets the value of the 'event_timestamp' field.
   * @param value the value to set.
   */
  public void setEventTimestamp(java.lang.CharSequence value) {
    this.event_timestamp = value;
  }

  /**
   * Gets the value of the 'publish_timestamp' field.
   * @return The value of the 'publish_timestamp' field.
   */
  public java.lang.CharSequence getPublishTimestamp() {
    return publish_timestamp;
  }


  /**
   * Sets the value of the 'publish_timestamp' field.
   * @param value the value to set.
   */
  public void setPublishTimestamp(java.lang.CharSequence value) {
    this.publish_timestamp = value;
  }

  /**
   * Gets the value of the 'processing_time_sec' field.
   * @return The value of the 'processing_time_sec' field.
   */
  public float getProcessingTimeSec() {
    return processing_time_sec;
  }


  /**
   * Sets the value of the 'processing_time_sec' field.
   * @param value the value to set.
   */
  public void setProcessingTimeSec(float value) {
    this.processing_time_sec = value;
  }

  /**
   * Gets the value of the 'ack_timestamp' field.
   * @return The value of the 'ack_timestamp' field.
   */
  public java.lang.CharSequence getAckTimestamp() {
    return ack_timestamp;
  }


  /**
   * Sets the value of the 'ack_timestamp' field.
   * @param value the value to set.
   */
  public void setAckTimestamp(java.lang.CharSequence value) {
    this.ack_timestamp = value;
  }

  /**
   * Gets the value of the 'session_duration_hr' field.
   * @return The value of the 'session_duration_hr' field.
   */
  public float getSessionDurationHr() {
    return session_duration_hr;
  }


  /**
   * Sets the value of the 'session_duration_hr' field.
   * @param value the value to set.
   */
  public void setSessionDurationHr(float value) {
    this.session_duration_hr = value;
  }

  /**
   * Gets the value of the 'avg_charge_rate_kw' field.
   * @return The value of the 'avg_charge_rate_kw' field.
   */
  public float getAvgChargeRateKw() {
    return avg_charge_rate_kw;
  }


  /**
   * Sets the value of the 'avg_charge_rate_kw' field.
   * @param value the value to set.
   */
  public void setAvgChargeRateKw(float value) {
    this.avg_charge_rate_kw = value;
  }

  /**
   * Gets the value of the 'battery_capacity_kwh' field.
   * @return The value of the 'battery_capacity_kwh' field.
   */
  public float getBatteryCapacityKwh() {
    return battery_capacity_kwh;
  }


  /**
   * Sets the value of the 'battery_capacity_kwh' field.
   * @param value the value to set.
   */
  public void setBatteryCapacityKwh(float value) {
    this.battery_capacity_kwh = value;
  }

  /**
   * Gets the value of the 'battery_level_start' field.
   * @return The value of the 'battery_level_start' field.
   */
  public float getBatteryLevelStart() {
    return battery_level_start;
  }


  /**
   * Sets the value of the 'battery_level_start' field.
   * @param value the value to set.
   */
  public void setBatteryLevelStart(float value) {
    this.battery_level_start = value;
  }

  /**
   * Gets the value of the 'battery_level_end' field.
   * @return The value of the 'battery_level_end' field.
   */
  public java.lang.Float getBatteryLevelEnd() {
    return battery_level_end;
  }


  /**
   * Sets the value of the 'battery_level_end' field.
   * @param value the value to set.
   */
  public void setBatteryLevelEnd(java.lang.Float value) {
    this.battery_level_end = value;
  }

  /**
   * Gets the value of the 'charged_total_kwh' field.
   * @return The value of the 'charged_total_kwh' field.
   */
  public java.lang.Float getChargedTotalKwh() {
    return charged_total_kwh;
  }


  /**
   * Sets the value of the 'charged_total_kwh' field.
   * @param value the value to set.
   */
  public void setChargedTotalKwh(java.lang.Float value) {
    this.charged_total_kwh = value;
  }

  /**
   * Creates a new EvChargeMetricComplete RecordBuilder.
   * @return A new EvChargeMetricComplete RecordBuilder
   */
  public static com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder newBuilder() {
    return new com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder();
  }

  /**
   * Creates a new EvChargeMetricComplete RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new EvChargeMetricComplete RecordBuilder
   */
  public static com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder newBuilder(com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder other) {
    if (other == null) {
      return new com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder();
    } else {
      return new com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder(other);
    }
  }

  /**
   * Creates a new EvChargeMetricComplete RecordBuilder by copying an existing EvChargeMetricComplete instance.
   * @param other The existing instance to copy.
   * @return A new EvChargeMetricComplete RecordBuilder
   */
  public static com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder newBuilder(com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete other) {
    if (other == null) {
      return new com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder();
    } else {
      return new com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder(other);
    }
  }

  /**
   * RecordBuilder for EvChargeMetricComplete instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<EvChargeMetricComplete>
    implements org.apache.avro.data.RecordBuilder<EvChargeMetricComplete> {

    private java.lang.CharSequence session_id;
    private int station_id;
    private java.lang.CharSequence location;
    private java.lang.CharSequence event_timestamp;
    private java.lang.CharSequence publish_timestamp;
    private float processing_time_sec;
    private java.lang.CharSequence ack_timestamp;
    private float session_duration_hr;
    private float avg_charge_rate_kw;
    private float battery_capacity_kwh;
    private float battery_level_start;
    private java.lang.Float battery_level_end;
    private java.lang.Float charged_total_kwh;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.session_id)) {
        this.session_id = data().deepCopy(fields()[0].schema(), other.session_id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.station_id)) {
        this.station_id = data().deepCopy(fields()[1].schema(), other.station_id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.location)) {
        this.location = data().deepCopy(fields()[2].schema(), other.location);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.event_timestamp)) {
        this.event_timestamp = data().deepCopy(fields()[3].schema(), other.event_timestamp);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.publish_timestamp)) {
        this.publish_timestamp = data().deepCopy(fields()[4].schema(), other.publish_timestamp);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.processing_time_sec)) {
        this.processing_time_sec = data().deepCopy(fields()[5].schema(), other.processing_time_sec);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.ack_timestamp)) {
        this.ack_timestamp = data().deepCopy(fields()[6].schema(), other.ack_timestamp);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.session_duration_hr)) {
        this.session_duration_hr = data().deepCopy(fields()[7].schema(), other.session_duration_hr);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.avg_charge_rate_kw)) {
        this.avg_charge_rate_kw = data().deepCopy(fields()[8].schema(), other.avg_charge_rate_kw);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.battery_capacity_kwh)) {
        this.battery_capacity_kwh = data().deepCopy(fields()[9].schema(), other.battery_capacity_kwh);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.battery_level_start)) {
        this.battery_level_start = data().deepCopy(fields()[10].schema(), other.battery_level_start);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.battery_level_end)) {
        this.battery_level_end = data().deepCopy(fields()[11].schema(), other.battery_level_end);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.charged_total_kwh)) {
        this.charged_total_kwh = data().deepCopy(fields()[12].schema(), other.charged_total_kwh);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
    }

    /**
     * Creates a Builder by copying an existing EvChargeMetricComplete instance
     * @param other The existing instance to copy.
     */
    private Builder(com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.session_id)) {
        this.session_id = data().deepCopy(fields()[0].schema(), other.session_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.station_id)) {
        this.station_id = data().deepCopy(fields()[1].schema(), other.station_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.location)) {
        this.location = data().deepCopy(fields()[2].schema(), other.location);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.event_timestamp)) {
        this.event_timestamp = data().deepCopy(fields()[3].schema(), other.event_timestamp);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.publish_timestamp)) {
        this.publish_timestamp = data().deepCopy(fields()[4].schema(), other.publish_timestamp);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.processing_time_sec)) {
        this.processing_time_sec = data().deepCopy(fields()[5].schema(), other.processing_time_sec);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.ack_timestamp)) {
        this.ack_timestamp = data().deepCopy(fields()[6].schema(), other.ack_timestamp);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.session_duration_hr)) {
        this.session_duration_hr = data().deepCopy(fields()[7].schema(), other.session_duration_hr);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.avg_charge_rate_kw)) {
        this.avg_charge_rate_kw = data().deepCopy(fields()[8].schema(), other.avg_charge_rate_kw);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.battery_capacity_kwh)) {
        this.battery_capacity_kwh = data().deepCopy(fields()[9].schema(), other.battery_capacity_kwh);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.battery_level_start)) {
        this.battery_level_start = data().deepCopy(fields()[10].schema(), other.battery_level_start);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.battery_level_end)) {
        this.battery_level_end = data().deepCopy(fields()[11].schema(), other.battery_level_end);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.charged_total_kwh)) {
        this.charged_total_kwh = data().deepCopy(fields()[12].schema(), other.charged_total_kwh);
        fieldSetFlags()[12] = true;
      }
    }

    /**
      * Gets the value of the 'session_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getSessionId() {
      return session_id;
    }


    /**
      * Sets the value of the 'session_id' field.
      * @param value The value of 'session_id'.
      * @return This builder.
      */
    public com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder setSessionId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.session_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'session_id' field has been set.
      * @return True if the 'session_id' field has been set, false otherwise.
      */
    public boolean hasSessionId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'session_id' field.
      * @return This builder.
      */
    public com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder clearSessionId() {
      session_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'station_id' field.
      * @return The value.
      */
    public int getStationId() {
      return station_id;
    }


    /**
      * Sets the value of the 'station_id' field.
      * @param value The value of 'station_id'.
      * @return This builder.
      */
    public com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder setStationId(int value) {
      validate(fields()[1], value);
      this.station_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'station_id' field has been set.
      * @return True if the 'station_id' field has been set, false otherwise.
      */
    public boolean hasStationId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'station_id' field.
      * @return This builder.
      */
    public com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder clearStationId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'location' field.
      * @return The value.
      */
    public java.lang.CharSequence getLocation() {
      return location;
    }


    /**
      * Sets the value of the 'location' field.
      * @param value The value of 'location'.
      * @return This builder.
      */
    public com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder setLocation(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.location = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'location' field has been set.
      * @return True if the 'location' field has been set, false otherwise.
      */
    public boolean hasLocation() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'location' field.
      * @return This builder.
      */
    public com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder clearLocation() {
      location = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'event_timestamp' field.
      * @return The value.
      */
    public java.lang.CharSequence getEventTimestamp() {
      return event_timestamp;
    }


    /**
      * Sets the value of the 'event_timestamp' field.
      * @param value The value of 'event_timestamp'.
      * @return This builder.
      */
    public com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder setEventTimestamp(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.event_timestamp = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'event_timestamp' field has been set.
      * @return True if the 'event_timestamp' field has been set, false otherwise.
      */
    public boolean hasEventTimestamp() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'event_timestamp' field.
      * @return This builder.
      */
    public com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder clearEventTimestamp() {
      event_timestamp = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'publish_timestamp' field.
      * @return The value.
      */
    public java.lang.CharSequence getPublishTimestamp() {
      return publish_timestamp;
    }


    /**
      * Sets the value of the 'publish_timestamp' field.
      * @param value The value of 'publish_timestamp'.
      * @return This builder.
      */
    public com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder setPublishTimestamp(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.publish_timestamp = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'publish_timestamp' field has been set.
      * @return True if the 'publish_timestamp' field has been set, false otherwise.
      */
    public boolean hasPublishTimestamp() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'publish_timestamp' field.
      * @return This builder.
      */
    public com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder clearPublishTimestamp() {
      publish_timestamp = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'processing_time_sec' field.
      * @return The value.
      */
    public float getProcessingTimeSec() {
      return processing_time_sec;
    }


    /**
      * Sets the value of the 'processing_time_sec' field.
      * @param value The value of 'processing_time_sec'.
      * @return This builder.
      */
    public com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder setProcessingTimeSec(float value) {
      validate(fields()[5], value);
      this.processing_time_sec = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'processing_time_sec' field has been set.
      * @return True if the 'processing_time_sec' field has been set, false otherwise.
      */
    public boolean hasProcessingTimeSec() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'processing_time_sec' field.
      * @return This builder.
      */
    public com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder clearProcessingTimeSec() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'ack_timestamp' field.
      * @return The value.
      */
    public java.lang.CharSequence getAckTimestamp() {
      return ack_timestamp;
    }


    /**
      * Sets the value of the 'ack_timestamp' field.
      * @param value The value of 'ack_timestamp'.
      * @return This builder.
      */
    public com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder setAckTimestamp(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.ack_timestamp = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'ack_timestamp' field has been set.
      * @return True if the 'ack_timestamp' field has been set, false otherwise.
      */
    public boolean hasAckTimestamp() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'ack_timestamp' field.
      * @return This builder.
      */
    public com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder clearAckTimestamp() {
      ack_timestamp = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'session_duration_hr' field.
      * @return The value.
      */
    public float getSessionDurationHr() {
      return session_duration_hr;
    }


    /**
      * Sets the value of the 'session_duration_hr' field.
      * @param value The value of 'session_duration_hr'.
      * @return This builder.
      */
    public com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder setSessionDurationHr(float value) {
      validate(fields()[7], value);
      this.session_duration_hr = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'session_duration_hr' field has been set.
      * @return True if the 'session_duration_hr' field has been set, false otherwise.
      */
    public boolean hasSessionDurationHr() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'session_duration_hr' field.
      * @return This builder.
      */
    public com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder clearSessionDurationHr() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'avg_charge_rate_kw' field.
      * @return The value.
      */
    public float getAvgChargeRateKw() {
      return avg_charge_rate_kw;
    }


    /**
      * Sets the value of the 'avg_charge_rate_kw' field.
      * @param value The value of 'avg_charge_rate_kw'.
      * @return This builder.
      */
    public com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder setAvgChargeRateKw(float value) {
      validate(fields()[8], value);
      this.avg_charge_rate_kw = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'avg_charge_rate_kw' field has been set.
      * @return True if the 'avg_charge_rate_kw' field has been set, false otherwise.
      */
    public boolean hasAvgChargeRateKw() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'avg_charge_rate_kw' field.
      * @return This builder.
      */
    public com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder clearAvgChargeRateKw() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'battery_capacity_kwh' field.
      * @return The value.
      */
    public float getBatteryCapacityKwh() {
      return battery_capacity_kwh;
    }


    /**
      * Sets the value of the 'battery_capacity_kwh' field.
      * @param value The value of 'battery_capacity_kwh'.
      * @return This builder.
      */
    public com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder setBatteryCapacityKwh(float value) {
      validate(fields()[9], value);
      this.battery_capacity_kwh = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'battery_capacity_kwh' field has been set.
      * @return True if the 'battery_capacity_kwh' field has been set, false otherwise.
      */
    public boolean hasBatteryCapacityKwh() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'battery_capacity_kwh' field.
      * @return This builder.
      */
    public com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder clearBatteryCapacityKwh() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'battery_level_start' field.
      * @return The value.
      */
    public float getBatteryLevelStart() {
      return battery_level_start;
    }


    /**
      * Sets the value of the 'battery_level_start' field.
      * @param value The value of 'battery_level_start'.
      * @return This builder.
      */
    public com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder setBatteryLevelStart(float value) {
      validate(fields()[10], value);
      this.battery_level_start = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'battery_level_start' field has been set.
      * @return True if the 'battery_level_start' field has been set, false otherwise.
      */
    public boolean hasBatteryLevelStart() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'battery_level_start' field.
      * @return This builder.
      */
    public com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder clearBatteryLevelStart() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'battery_level_end' field.
      * @return The value.
      */
    public java.lang.Float getBatteryLevelEnd() {
      return battery_level_end;
    }


    /**
      * Sets the value of the 'battery_level_end' field.
      * @param value The value of 'battery_level_end'.
      * @return This builder.
      */
    public com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder setBatteryLevelEnd(java.lang.Float value) {
      validate(fields()[11], value);
      this.battery_level_end = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'battery_level_end' field has been set.
      * @return True if the 'battery_level_end' field has been set, false otherwise.
      */
    public boolean hasBatteryLevelEnd() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'battery_level_end' field.
      * @return This builder.
      */
    public com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder clearBatteryLevelEnd() {
      battery_level_end = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'charged_total_kwh' field.
      * @return The value.
      */
    public java.lang.Float getChargedTotalKwh() {
      return charged_total_kwh;
    }


    /**
      * Sets the value of the 'charged_total_kwh' field.
      * @param value The value of 'charged_total_kwh'.
      * @return This builder.
      */
    public com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder setChargedTotalKwh(java.lang.Float value) {
      validate(fields()[12], value);
      this.charged_total_kwh = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'charged_total_kwh' field has been set.
      * @return True if the 'charged_total_kwh' field has been set, false otherwise.
      */
    public boolean hasChargedTotalKwh() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'charged_total_kwh' field.
      * @return This builder.
      */
    public com.googlecodesamples.cloud.jss.common.utilities.EvChargeMetricComplete.Builder clearChargedTotalKwh() {
      charged_total_kwh = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public EvChargeMetricComplete build() {
      try {
        EvChargeMetricComplete record = new EvChargeMetricComplete();
        record.session_id = fieldSetFlags()[0] ? this.session_id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.station_id = fieldSetFlags()[1] ? this.station_id : (java.lang.Integer) defaultValue(fields()[1]);
        record.location = fieldSetFlags()[2] ? this.location : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.event_timestamp = fieldSetFlags()[3] ? this.event_timestamp : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.publish_timestamp = fieldSetFlags()[4] ? this.publish_timestamp : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.processing_time_sec = fieldSetFlags()[5] ? this.processing_time_sec : (java.lang.Float) defaultValue(fields()[5]);
        record.ack_timestamp = fieldSetFlags()[6] ? this.ack_timestamp : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.session_duration_hr = fieldSetFlags()[7] ? this.session_duration_hr : (java.lang.Float) defaultValue(fields()[7]);
        record.avg_charge_rate_kw = fieldSetFlags()[8] ? this.avg_charge_rate_kw : (java.lang.Float) defaultValue(fields()[8]);
        record.battery_capacity_kwh = fieldSetFlags()[9] ? this.battery_capacity_kwh : (java.lang.Float) defaultValue(fields()[9]);
        record.battery_level_start = fieldSetFlags()[10] ? this.battery_level_start : (java.lang.Float) defaultValue(fields()[10]);
        record.battery_level_end = fieldSetFlags()[11] ? this.battery_level_end : (java.lang.Float) defaultValue(fields()[11]);
        record.charged_total_kwh = fieldSetFlags()[12] ? this.charged_total_kwh : (java.lang.Float) defaultValue(fields()[12]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<EvChargeMetricComplete>
    WRITER$ = (org.apache.avro.io.DatumWriter<EvChargeMetricComplete>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<EvChargeMetricComplete>
    READER$ = (org.apache.avro.io.DatumReader<EvChargeMetricComplete>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.session_id);

    out.writeInt(this.station_id);

    out.writeString(this.location);

    out.writeString(this.event_timestamp);

    out.writeString(this.publish_timestamp);

    out.writeFloat(this.processing_time_sec);

    out.writeString(this.ack_timestamp);

    out.writeFloat(this.session_duration_hr);

    out.writeFloat(this.avg_charge_rate_kw);

    out.writeFloat(this.battery_capacity_kwh);

    out.writeFloat(this.battery_level_start);

    if (this.battery_level_end == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeFloat(this.battery_level_end);
    }

    if (this.charged_total_kwh == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeFloat(this.charged_total_kwh);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.session_id = in.readString(this.session_id instanceof Utf8 ? (Utf8)this.session_id : null);

      this.station_id = in.readInt();

      this.location = in.readString(this.location instanceof Utf8 ? (Utf8)this.location : null);

      this.event_timestamp = in.readString(this.event_timestamp instanceof Utf8 ? (Utf8)this.event_timestamp : null);

      this.publish_timestamp = in.readString(this.publish_timestamp instanceof Utf8 ? (Utf8)this.publish_timestamp : null);

      this.processing_time_sec = in.readFloat();

      this.ack_timestamp = in.readString(this.ack_timestamp instanceof Utf8 ? (Utf8)this.ack_timestamp : null);

      this.session_duration_hr = in.readFloat();

      this.avg_charge_rate_kw = in.readFloat();

      this.battery_capacity_kwh = in.readFloat();

      this.battery_level_start = in.readFloat();

      if (in.readIndex() != 1) {
        in.readNull();
        this.battery_level_end = null;
      } else {
        this.battery_level_end = in.readFloat();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.charged_total_kwh = null;
      } else {
        this.charged_total_kwh = in.readFloat();
      }

    } else {
      for (int i = 0; i < 13; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.session_id = in.readString(this.session_id instanceof Utf8 ? (Utf8)this.session_id : null);
          break;

        case 1:
          this.station_id = in.readInt();
          break;

        case 2:
          this.location = in.readString(this.location instanceof Utf8 ? (Utf8)this.location : null);
          break;

        case 3:
          this.event_timestamp = in.readString(this.event_timestamp instanceof Utf8 ? (Utf8)this.event_timestamp : null);
          break;

        case 4:
          this.publish_timestamp = in.readString(this.publish_timestamp instanceof Utf8 ? (Utf8)this.publish_timestamp : null);
          break;

        case 5:
          this.processing_time_sec = in.readFloat();
          break;

        case 6:
          this.ack_timestamp = in.readString(this.ack_timestamp instanceof Utf8 ? (Utf8)this.ack_timestamp : null);
          break;

        case 7:
          this.session_duration_hr = in.readFloat();
          break;

        case 8:
          this.avg_charge_rate_kw = in.readFloat();
          break;

        case 9:
          this.battery_capacity_kwh = in.readFloat();
          break;

        case 10:
          this.battery_level_start = in.readFloat();
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.battery_level_end = null;
          } else {
            this.battery_level_end = in.readFloat();
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.charged_total_kwh = null;
          } else {
            this.charged_total_kwh = in.readFloat();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










